class Solution {
public:
    int numBusesToDestination(vector<vector<int>>& routes, int source, int target) {
        map<int, vector<int>> m;
        int index = 0;
        for(auto it: routes){
            for(auto i: it){
                m[i].push_back(index);
            }
            index++;
        }
        set<int> busvis;
        queue<int> q;
        q.push(source);
        set<int> bustop;
        bustop.insert(source);
        int level = 0;
        while(!q.empty()){
            int sz = q.size();
            while(sz--){
                int top = q.front(); q.pop();
                if(top == target){
                    return level;
                }
                vector<int> buses = m[top];
                for(int i: buses){
                    if(busvis.find(i) != busvis.end()){
                        continue;
                    }
                    vector<int> stops = routes[i];
                    for(int i: stops){
                        if(bustop.find(i) != bustop.end()){
                            continue;
                        }
                        q.push(i);
                        bustop.insert(i);
                    }
                    busvis.insert(i);
                }
            }
            level++;
        }
        return -1;
    }
};
