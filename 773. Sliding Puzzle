class Solution {
public:
    int slidingPuzzle(vector<vector<int>>& board) {
        string str;
        for(auto it: board){
            for(auto i: it){
                str+=(i+'0');
            }
        }
        vector<vector<int>> arr;
        arr.push_back({1,3});
        arr.push_back({0,2,4});
        arr.push_back({1,5});
        arr.push_back({0, 4});
        arr.push_back({1,3, 5});
        arr.push_back({4, 2});
        queue<string> q;
        q.push(str);
        set<string> s;
        s.insert(str);
        int level = 0;
        while(!q.empty()){
            int sz = q.size();
            while(sz--){
                string top = q.front(); q.pop();
                if(top == "123450"){
                    return level;
                }
                int idx = 0;
                for(char ch: top){
                    if(ch == '0'){
                        break;
                    }
                    idx++;
                }
                vector<int> swaps = arr[idx];
                for(int i: swaps){
                    string topp = top;
                    char ch = topp[i];
                    topp[i] = topp[idx];
                    topp[idx] = ch;
                    if(s.find(topp) != s.end()){
                        continue;
                    }
                    q.push(topp);
                    s.insert(topp);
                }
            }
            level++;
        }
        return -1;
    }
};
